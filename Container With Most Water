# #o(n^2)

# class Solution:
#     def maxArea(self, height):
    
    
#         n = len(height)
        
        
#         res = 0
        
#         for l in range(n):
            
#             for r in range(l +1, n):
#                 area = (r - l) * min(height[l], height[r])
                
#                 res = max(res,area)
                
        
#         return res

    
    
    
    
    
#o(n)

class Solution:
    def maxArea(self, height):
    
        res = 0
        l = 0
        r = len(height) - 1
        
        
        while l < r :
            
            
            area = (r - l) * min(height[l], height[r])
            res = max(res,area)
            
            if height[l]<height[r]:
                l += 1
            else : 
                r -=1
        return res
            
       
